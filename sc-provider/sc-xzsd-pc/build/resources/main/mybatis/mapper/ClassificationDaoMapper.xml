<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.classification.dao.ClassificationDao">


    <!--统计父类名称数量-->
    <select id="countFatherCate" parameterType="com.xzsd.pc.classification.entity.ClassificationInfo" resultType="int">
        select count(cate_name)
        from t_sys_classification
        where is_deleted = 0
        and cate_name = #{cateName}
        and is_parent = 0
<!--        <if test="skuNo != null and skuNo != ''">-->
<!--            and sku_no != #{skuNo}-->
<!--        </if>-->
    </select>

    <!--统计子类名称数量-->
    <select id="countSonCate" parameterType="com.xzsd.pc.classification.entity.ClassificationInfo" resultType="int">
        select count(cate_name)
        from t_sys_classification
        where is_deleted = 0
        and cate_name = #{cateName}
        and is_parent = 1
        <!--        <if test="skuNo != null and skuNo != ''">-->
        <!--            and sku_no != #{skuNo}-->
        <!--        </if>-->
    </select>


    <!--新增父级分类-->
    <insert id="saveFatherCate" parameterType="com.xzsd.pc.classification.entity.ClassificationInfo">
        insert into t_sys_classification
        (cate_code,
         cate_name,

         remark,
         is_parent,

         is_deleted,
         create_time,
         create_user,
         update_time,
         update_user,
         version)
        values
           (#{cateCode},
            #{cateName},
            #{remark},
            #{isParent},

            #{isDeleted},
            now(),
            #{createBy},
            now(),
            #{lastModifiedBy},
            0)
    </insert>

    <!--新增子级分类-->
    <insert id="saveSonCate" parameterType="com.xzsd.pc.classification.entity.ClassificationInfo">
        insert into t_sys_classification
        (cate_code,
         cate_name,

         remark,
         is_parent,
         is_deleted,


         create_time,
         create_user,
         update_time,
         update_user,
         version)
        values
           (#{cateCode},
            #{cateName},

            #{remark},
            #{isParent},




            #{isDeleted},
            now(),
            #{createBy},
            now(),
            #{lastModifiedBy},
            0)
    </insert>

    <!--新增子级分类父级编码-->
    <update id="saveSonCateParent" parameterType="com.xzsd.pc.classification.entity.ClassificationInfo">
    update t_sys_classification a
    set
        a.cate_code_parent = #{cateCodeParent},
        a.cate_name_parent = (select b.cate_name from (SELECT * FROM t_sys_classification ) b where b.is_deleted = 0 and b.cate_code = #{cateCodeParent})
    where a.cate_code = #{cateCode}

    </update>

    <!--父级分类信息-->
    <select id="listFatherCate" parameterType="com.xzsd.pc.classification.entity.ClassificationInfo" resultType="com.xzsd.pc.classification.entity.ClassificationInfo">
        select
        a.cate_code cateCode,
        a.cate_name cateName


        from t_sys_classification a
        where a.is_parent = 0


        order by a.create_time desc
    </select>

    <resultMap id="cateMap1" type="com.xzsd.pc.classification.entity.CateListInfo">
        <id property="cateCode" column="cate_code"></id>
        <result property="cateName" column="cate_name"></result>
        <result property="version" column="version"></result>

        <collection property="classificationSonList" ofType="CateListInfo" javaType="java.util.List" column="cate_code" select="getByCateCode">

        </collection>

    </resultMap>
    <!--根据父类cateCode查找其子类别-->
    <select id="getByCateCode" resultMap="cateMap1" parameterType="String">
        SELECT
        a.cate_code cate_code,
        a.cate_name cate_name,
        version
        FROM t_sys_classification a
        WHERE a.cate_code_parent = #{cate_code}
        and is_deleted = 0
        order by create_time asc
    </select>



    <!--查找所有类别(递归)-->
    <select id="listCateByPage" resultMap="cateMap1" parameterType="int">
        SELECT
        cate_code,
        cate_name,
        version
        FROM t_sys_classification
        WHERE is_deleted = 0
        <choose>
        <when test="isParent ==0">
            AND t_sys_classification.cate_code_parent IS NULL
        </when>
        <otherwise>
            AND cate_code_parent = #{cate_code_parent}
        </otherwise>
    </choose>
        order by create_time asc

    </select>


    <!--获取用户信息-->
    <select id="getCateDetail" parameterType="java.lang.String" resultType="com.xzsd.pc.classification.entity.ClassificationInfo">
        select
            cate_name cateName,
            remark remark

        from t_sys_classification
        where cate_code = #{cateCode}
        and is_deleted = 0
    </select>

    <!--删除分类-->
    <update id='deleteCate' parameterType="com.xzsd.pc.classification.entity.ClassificationInfo">
        update t_sys_classification
        set
        is_deleted = 1,
        update_time = now(),
        update_user = #{userCode},
        version = version + 1
        where cate_code in
        <foreach item='item' index='index' collection="listCateCode" open="(" separator="," close=")">
            #{item}
        </foreach>
        or cate_code_parent in
        <foreach item='item' index='index' collection="listCateCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>







</mapper>